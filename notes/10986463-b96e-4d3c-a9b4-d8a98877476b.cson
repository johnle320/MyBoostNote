createdAt: "2019-10-20T17:45:41.113Z"
updatedAt: "2020-03-21T15:38:49.488Z"
type: "SNIPPET_NOTE"
folder: "664ddec8ff9fd71c6998"
title: "Cpp: Declare Random Engine to be Static"
tags: [
  "cpp"
  "random"
  "random_engine"
  "static"
]
description: "Cpp: Declare Random Engine to be Static"
snippets: [
  {
    linesHighlighted: []
    name: ""
    mode: "C++"
    content: '''
      static default_random_engine randomEngine(time(NULL));
            
      /* WHY DO WE DECLARE RANDOMENGINE TO BE STATIC? 
            
      randomEngine receives time in second as its seed. Let us say the time = 10s, then the series of random numbers after 5 calls is:
            
      5, 6, 11, 3, 2 --> generated by the 1st randomEngine and used for battle 1
            
      Let say within 1 second we simulate another battle. Then another randomEngine will be created. 
      Because the time has not jumped to the 11th second yet, the randomEngine will be seeded with the SAME seed time = 10s again.
      Thus, the next 5 calls the series of 5 random numbers will be THE SAME, which is:
            
      5, 6, 11, 3, 2 --> generated by the 2nd randomEngine and used for battle 2
            
      By declaring the randomEngine to be static, the randomEngine will live for the lifetime of the whole program.
      No new ranDomEngine will be created in the second (and after that) battle simulations.
      In fact all battle simulations will use the same randomwEngine and will be guaranteed to have random numbers. 
      This is how it will work:
            
      5, 6, 11, 3, 2	--> generated by the sole randomEngine and used for battle 1
      45, 2, 8 ,9,32  --> generated by the sole randomEngine and used for battle 2
            
      */
    '''
  }
]
isStarred: false
isTrashed: false
